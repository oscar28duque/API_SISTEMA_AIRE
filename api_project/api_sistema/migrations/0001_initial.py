# Generated by Django 5.2 on 2025-04-22 17:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Estacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_estacion', models.CharField(max_length=100, unique=True)),
                ('ubicacion', models.TextField()),
                ('latitud', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitud', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Estación',
                'verbose_name_plural': 'Estaciones',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_rol', models.CharField(max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='Zona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_zona', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField()),
                ('latitud', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitud', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Zona',
                'verbose_name_plural': 'Zonas',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('estado_cuenta', models.CharField(choices=[('activo', 'Activo'), ('inactivo', 'Inactivo')], default='activo', max_length=10)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ConfiguracionDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_visualizacion', models.CharField(max_length=50)),
                ('parametros', models.JSONField()),
                ('fecha_configuracion', models.DateTimeField(auto_now_add=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configuraciones_dashboard', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuración de Dashboard',
                'verbose_name_plural': 'Configuraciones de Dashboard',
            },
        ),
        migrations.CreateModel(
            name='RegistroIntentoLogin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_ingresado', models.CharField(max_length=150)),
                ('fecha_hora', models.DateTimeField(auto_now_add=True)),
                ('exitoso', models.BooleanField()),
                ('ip', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intentos_login', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registro de Intento de Login',
                'verbose_name_plural': 'Registros de Intentos de Login',
            },
        ),
        migrations.CreateModel(
            name='Reporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('periodo_inicio', models.DateTimeField()),
                ('periodo_fin', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('generado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reportes_generados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reporte',
                'verbose_name_plural': 'Reportes',
            },
        ),
        migrations.CreateModel(
            name='DetalleReporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenido', models.TextField()),
                ('tipo_contenido', models.CharField(choices=[('texto', 'Texto'), ('grafico', 'Gráfico'), ('tabla', 'Tabla'), ('resumen', 'Resumen')], max_length=50)),
                ('orden', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reporte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='api_sistema.reporte')),
            ],
            options={
                'verbose_name': 'Detalle de Reporte',
                'verbose_name_plural': 'Detalles de Reporte',
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_sensor', models.CharField(max_length=100)),
                ('modelo', models.CharField(max_length=100)),
                ('unidad_medida', models.CharField(max_length=50)),
                ('fecha_instalacion', models.DateField()),
                ('fecha_ultima_calibracion', models.DateField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('inactivo', 'Inactivo'), ('mantenimiento', 'Mantenimiento'), ('calibracion', 'Calibración')], max_length=20)),
                ('rango_minimo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rango_maximo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('estacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensores', to='api_sistema.estacion')),
            ],
            options={
                'verbose_name': 'Sensor',
                'verbose_name_plural': 'Sensores',
            },
        ),
        migrations.CreateModel(
            name='TokenRecuperacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField()),
                ('fecha_generacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_expiracion', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tokens_recuperacion', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Token de Recuperación',
                'verbose_name_plural': 'Tokens de Recuperación',
            },
        ),
        migrations.AddField(
            model_name='estacion',
            name='zona',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estaciones', to='api_sistema.zona'),
        ),
        migrations.CreateModel(
            name='LogActividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modulo', models.CharField(max_length=100)),
                ('accion', models.CharField(max_length=100)),
                ('descripcion_evento', models.TextField()),
                ('fecha_hora', models.DateTimeField(auto_now_add=True)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs_actividad', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Actividad',
                'verbose_name_plural': 'Logs de Actividad',
                'indexes': [models.Index(fields=['fecha_hora'], name='api_sistema_fecha_h_a65909_idx'), models.Index(fields=['usuario', 'fecha_hora'], name='api_sistema_usuario_151ee6_idx')],
            },
        ),
        migrations.CreateModel(
            name='Lectura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(-1000), django.core.validators.MaxValueValidator(1000)])),
                ('fecha_hora', models.DateTimeField()),
                ('calidad_dato', models.CharField(choices=[('bueno', 'Bueno'), ('dudoso', 'Dudoso'), ('malo', 'Malo')], default='bueno', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecturas', to='api_sistema.sensor')),
            ],
            options={
                'verbose_name': 'Lectura',
                'verbose_name_plural': 'Lecturas',
                'indexes': [models.Index(fields=['fecha_hora'], name='api_sistema_fecha_h_6a7639_idx'), models.Index(fields=['sensor', 'fecha_hora'], name='api_sistema_sensor__69a2d5_idx')],
            },
        ),
        migrations.CreateModel(
            name='Alerta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_alerta', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('nivel_alerta', models.CharField(choices=[('bajo', 'Bajo'), ('medio', 'Medio'), ('alto', 'Alto'), ('critico', 'Crítico')], max_length=10)),
                ('fecha_hora', models.DateTimeField(auto_now_add=True)),
                ('atendida', models.BooleanField(default=False)),
                ('fecha_atencion', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('atendida_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alertas_atendidas', to=settings.AUTH_USER_MODEL)),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alertas', to='api_sistema.sensor')),
            ],
            options={
                'verbose_name': 'Alerta',
                'verbose_name_plural': 'Alertas',
                'indexes': [models.Index(fields=['fecha_hora'], name='api_sistema_fecha_h_977537_idx'), models.Index(fields=['sensor', 'fecha_hora'], name='api_sistema_sensor__155050_idx')],
            },
        ),
        migrations.CreateModel(
            name='UsuarioRol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuarios_rol', to='api_sistema.rol')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles_usuario', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Usuario Rol',
                'verbose_name_plural': 'Usuarios Roles',
                'unique_together': {('usuario', 'rol')},
            },
        ),
    ]
